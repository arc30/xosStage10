

alias phySP S0;
phySP=([PTBR + 2*(SP/512)]*512) + SP%512 ;

alias sysCallNo S1;
sysCallNo = [phySP - 1];

//args???
alias counter S2;
alias flag S3;
alias arg1 S5;

if (sysCallNo==1) then // Create
	
	arg1=[phySP - 3];
	counter=FAT;
	flag=0;
	
	while (counter < FAT+512) do
		if ([counter]==arg1) then
			[phySP - 2]=0;    //return 0 with success
			ireturn;	
		endif;
		counter=counter+8;
	endwhile;		
		
	

	counter=24; //24 to 447 blocks can be used by user. search in df
	alias freeBl S4;
	freeBl=-1;
	
breakpoint;

	while (counter < 448) do
		if ([DISK_LIST + counter]==0) then
               			//6*512 is starting addr of df in memory. if a free block is found
			freeBl=counter;  break;
		endif;
		counter=counter+1;
	endwhile;
		
	if (freeBl==-1) then
		//return from call with value -1
		[phySP - 2]=-1;
		ireturn;
	endif;	

	//search for free entry in FAT. word 2 of an entry
	
	counter=FAT;
	flag=0;
	
	while (counter < FAT+512) do
		if ([counter + 2] ==-1) then
		 	flag=1; break;
		endif;
		counter=counter+8;
	endwhile;
	
	if (flag==0) then 
		//no free fat entry for basic block
		[phySP - 2]=-1;
		ireturn;
	endif;
	
	//free entry is found
	//set fields of fat table
	
	[counter]=arg1; //filename is arg
	[counter+1]=0; //filesize initialised to 0
	[counter+2]= freeBl ; //basic block num
	
	
	load(1,freeBl); // load basicblock to scratchpad

	alias i S6;
 	i=512;
	while (i< (512+256)) do
		[i]=-1;
		i=i+1;
	endwhile;

	store(1,freeBl); //store basicblock to disk from scratchpad	

	[DISK_LIST + freeBl]=1; //entry for basicblock in df set to 1
	
	store(5,19); //store fat
	store(6,20); //store df

	[phySP-2]=0;
	
	ireturn;
endif;

	
if(sysCallNo==4) then		//delete
	counter=FAT;
	flag=0;
	arg1=[phySP - 3]; //filename
	alias fatIndex S4;
	
	while (counter < FAT + 512) do
		if([counter]==arg1) then
			fatIndex= (counter-FAT)/8; flag=1; break;
		endif;
		counter=counter + 8;
	endwhile;

	//if file doesnt exist : failure

	if (flag==0) then
		[phySP - 2]=-1;
		ireturn;
	endif;

	counter=0;
	
	//failure if file is open

	while (counter<128) do
		if([FILE_TABLE + counter +0]==fatIndex) then //file open:entry in syswide OFT
			[phySP-2]=-1;
		print("Cnt@Open"); print(counter);
			ireturn;
		endif;
		counter=counter+2;
	endwhile;

	alias basicBl S6;
	alias dataBl S7;
	alias iCounter S8;

	basicBl=[FAT + fatIndex*8 + 2];

	counter=SCRATCHPAD;

	while(counter<SCRATCHPAD + 256) do
		load(1,basicBl);    //load basicBl to scratch pad to clear everything to ""
		if (([counter] !="") && ([counter]!=-1)) then
			dataBl=[counter];
			//load dataaBl to scratchpad and clr everything
			
			load(1,dataBl);
			iCounter=SCRATCHPAD;
			while(iCounter<SCRATCHPAD+512) do
				[iCounter]="";
				iCounter=iCounter+1;
			endwhile;
				
			//store back dataBl
			store(1,dataBl);
			
			[DISK_LIST + dataBl]=0; //free dataBl in mem copy of df 

		endif;
		counter=counter+1;
	endwhile;

	//clear everything in basicBl

	counter=SCRATCHPAD;
	load(1,basicBl);
	
	while(counter< SCRATCHPAD+512) do
		[counter]="";
		counter=counter+1;
	endwhile;

	store(1,basicBl);
	[DISK_LIST + basicBl]=0;

	[FAT + fatIndex*8]=-1;            //invalidate fat entry : arg
	[FAT + fatIndex*8 +1]=0;	
	[FAT + fatIndex*8 +2]=-1;   		//basicBl field
	
	//store fat and df to disk
	store(5,19);
	store(6,20);

	[phySP-2]=0;
	ireturn;
endif;































